//======================================================================
// prng.a65
// -------
// Test implementation of a small state prng.
//
//
// (c) 2017 Joachim StrÃ¶mbergson
//======================================================================


//------------------------------------------------------------------
// Basic start code.
//------------------------------------------------------------------
.pc = $0801     "Basic uppstart"
	        :BasicUpstart(start)


//------------------------------------------------------------------
//------------------------------------------------------------------
* = $1000     "PRNG example program"
start:
                ldy #$00
l1:
                jsr state_update
                txa
                and #$1f
                sta $0400, y
                iny
                bne l1
                rts


//------------------------------------------------------------------
// update_state
//
// Updates the prng state and returns the new prng byte in x.
//------------------------------------------------------------------
state_update:
                lda state
                adc #$33
                sta state

                lda state + 1
                eor state
                eor state + 3
                sta state + 1

                lda state + 2
                adc state + 1
                sta state + 2

                lsr state + 2
                lda state + 3
                adc state + 2
                eor state + 1
                sta state + 3
                tax
                rts

//------------------------------------------------------------------
//------------------------------------------------------------------
state:
.byte $01, $01, $01, $01


//======================================================================
// prng.a65
//======================================================================
